// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String                 @id @default(uuid())
  name                   String
  priceInCents           Int
  filePath               String
  imagePath              String
  description            String
  isAvailableForPurchase Boolean                @default(true) // to ensure users keep their original purchase available and for upcoming products not yet ready for purchase.
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[]
  downloadVerifications  DownloadVerification[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int // for receipt purposes and for price changes.
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String
  productId String
  // User refers to User model and id references refers to User Id. OnDelete Cascade: delete all orders associated with that user.
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade) // link up all our foreign keys.
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict) // Integrity: we want to keep product available for those who downloaded it.
}

model DownloadVerification {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  expiresAt DateTime
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}
